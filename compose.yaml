version: '3'

volumes:
  mongo-data:
    driver: local
  minio-data:
    driver: local

services:
  frontend:
    build: ./frontend
    image: nginx-armk-fe:0.0.1
    restart: unless-stopped
    ports:
      - 80:80
    depends_on:
      - backend

  backend:
    build: ./backend
    image: armk-be:0.0.1
    container_name: armk-be
    restart: unless-stopped
    environment:
      - PORT=${PORT}
      - MONGO_URL=${MONGO_URL}
      - MONGO_DB_NAME=${MONGO_DB_NAME}
      - NODE_ENV=${NODE_ENV}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_ACCESSKEY=${MINIO_ACCESSKEY}
      - MINIO_SECRETKEY=${MINIO_SECRETKEY}
      - MINIO_BUCKET=${MINIO_BUCKET}
    depends_on:
      - mongodb

  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}
      - ME_CONFIG_MONGODB_SERVER=${ME_CONFIG_MONGODB_SERVER}
    depends_on:
      - mongodb
    restart: unless-stopped

  minio:
    image: minio/minio
    volumes:
      - minio-data:/data
    restart: always
    ports:
      # - 9000:9000
      - 9001:9001
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /minio/data
    # healthcheck:
    #   test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
    #   interval: 30s
    #   timeout: 20s
    #   retries: 3
